name: Deploy to lambda
on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_artifacts:
    name: Build source code
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Cargo clean
        run: cargo clean

      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: 1.64.0
          targets: x86_64-unknown-linux-musl
      - name: Build | Check
        run: cargo check

      - name: Build Binary
        run: cargo build --release --all-features --target=x86_64-unknown-linux-musl

      - name: Rename binary to bootstrap
        run: 'mv ./rust_lambda ./bootstrap'
        working-directory: ./target/x86_64-unknown-linux-musl/release
      
      - name: Zip Code for Deployment
        run: 'sudo zip -j lambda.zip bootstrap'
        working-directory: ./target/x86_64-unknown-linux-musl/release

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: rust-lambda
          path: ./target/x86_64-unknown-linux-musl/release/lambda.zip

      # - name: Deploy Zip
      #   uses: appleboy/lambda-action@master
      #   working-directory: ./target/x86_64-unknown-linux-musl/release
      #   with:
      #     aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws_region: ${{ secrets.AWS_REGION }}
      #     function_name: rust-lambda
      #     zip_file: lambda.zip
      #     debug: true