name: Deploy to lambda
on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  deploy_zip:
    name: Deploy lambda function from ZIP
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Cargo clean
        run: cargo clean
      # - name: Install musl-tools
      #   run: |
      #     set -ex
      #     sudo apt-get update
      #     sudo apt-get install -y musl-tools
      # - run: >
      #     rustup target add
      #     x86_64-unknown-linux-musl
      #     x86_64-unknown-linux-gnux32
      #     x86_64-linux-android
      #     x86_64-apple-darwin
      #     x86_64-unknown-freebsd
      #     x86_64-unknown-netbsd
      #     x86_64-fuchsia
      #     i686-unknown-linux-gnu
      #     i686-unknown-linux-musl
      #     wasm32-unknown-emscripten
      #     riscv64gc-unknown-linux-gnu
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: 1.64.0
          targets:
            - x86_64-unknown-linux-musl
      - name: Build | Check
        run: cargo check
      - name: Build Binary
        uses: ATiltedTree/setup-rust@v1
        
        with:
          rust-version: 1.64.0
        run: cargo build 
      - name: Deploy Zip
        uses: ./
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: rust-lambda
          zip_file: deployment.zip
          debug: true
      
      - name: update env
        uses: ./
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: gorush
          zip_file: example/deployment.zip
          environment: foo=bar,author=appleboy
          debug: true

      - name: update config
        uses: ./
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: gorush
          zip_file: example/deployment.zip
          debug: true
          memory_size: 128
          timeout: 10
          # origin value is "hello"
          handler: foobar

      - name: dry run
        uses: ./
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: rust-lambda
          zip_file: deployment.zip
          debug: true
          dry_run: true

      - name: update role
        uses: ./
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: rust-lambda
          zip_file: example/deployment.zip
          debug: true
          role: arn:aws:iam::105396115708:role/s3-lambdas
          dry_run: true
